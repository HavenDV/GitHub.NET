
#nullable enable

namespace GitHub
{
    /// <summary>
    /// 
    /// </summary>
    public sealed partial class SecretScanningPatternOverride
    {
        /// <summary>
        /// The ID of the pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("token_type")]
        public string? TokenType { get; set; }

        /// <summary>
        /// The version of this pattern if it's a custom pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("custom_pattern_version")]
        public string? CustomPatternVersion { get; set; }

        /// <summary>
        /// The slug of the pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("slug")]
        public string? Slug { get; set; }

        /// <summary>
        /// The user-friendly name for the pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("display_name")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The total number of alerts generated by this pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("alert_total")]
        public int? AlertTotal { get; set; }

        /// <summary>
        /// The percentage of all alerts that this pattern represents, rounded to the nearest integer.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("alert_total_percentage")]
        public int? AlertTotalPercentage { get; set; }

        /// <summary>
        /// The number of false positive alerts generated by this pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("false_positives")]
        public int? FalsePositives { get; set; }

        /// <summary>
        /// The percentage of alerts from this pattern that are false positives, rounded to the nearest integer.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("false_positive_rate")]
        public int? FalsePositiveRate { get; set; }

        /// <summary>
        /// The percentage of blocks for this pattern that were bypassed, rounded to the nearest integer.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("bypass_rate")]
        public int? BypassRate { get; set; }

        /// <summary>
        /// The default push protection setting for this pattern.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("default_setting")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::GitHub.JsonConverters.SecretScanningPatternOverrideDefaultSettingJsonConverter))]
        public global::GitHub.SecretScanningPatternOverrideDefaultSetting? DefaultSetting { get; set; }

        /// <summary>
        /// The push protection setting for this pattern set at the enterprise level. Only present for partner patterns when the organization has a parent enterprise.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("enterprise_setting")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::GitHub.JsonConverters.SecretScanningPatternOverrideEnterpriseSettingJsonConverter))]
        public global::GitHub.SecretScanningPatternOverrideEnterpriseSetting? EnterpriseSetting { get; set; }

        /// <summary>
        /// The current push protection setting for this pattern. If this is `not-set`, then it inherits either the enterprise setting if it exists or the default setting.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("setting")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::GitHub.JsonConverters.SecretScanningPatternOverrideSettingJsonConverter))]
        public global::GitHub.SecretScanningPatternOverrideSetting? Setting { get; set; }

        /// <summary>
        /// Additional properties that are not explicitly defined in the schema
        /// </summary>
        [global::System.Text.Json.Serialization.JsonExtensionData]
        public global::System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get; set; } = new global::System.Collections.Generic.Dictionary<string, object>();

        /// <summary>
        /// Initializes a new instance of the <see cref="SecretScanningPatternOverride" /> class.
        /// </summary>
        /// <param name="tokenType">
        /// The ID of the pattern.
        /// </param>
        /// <param name="customPatternVersion">
        /// The version of this pattern if it's a custom pattern.
        /// </param>
        /// <param name="slug">
        /// The slug of the pattern.
        /// </param>
        /// <param name="displayName">
        /// The user-friendly name for the pattern.
        /// </param>
        /// <param name="alertTotal">
        /// The total number of alerts generated by this pattern.
        /// </param>
        /// <param name="alertTotalPercentage">
        /// The percentage of all alerts that this pattern represents, rounded to the nearest integer.
        /// </param>
        /// <param name="falsePositives">
        /// The number of false positive alerts generated by this pattern.
        /// </param>
        /// <param name="falsePositiveRate">
        /// The percentage of alerts from this pattern that are false positives, rounded to the nearest integer.
        /// </param>
        /// <param name="bypassRate">
        /// The percentage of blocks for this pattern that were bypassed, rounded to the nearest integer.
        /// </param>
        /// <param name="defaultSetting">
        /// The default push protection setting for this pattern.
        /// </param>
        /// <param name="enterpriseSetting">
        /// The push protection setting for this pattern set at the enterprise level. Only present for partner patterns when the organization has a parent enterprise.
        /// </param>
        /// <param name="setting">
        /// The current push protection setting for this pattern. If this is `not-set`, then it inherits either the enterprise setting if it exists or the default setting.
        /// </param>
#if NET7_0_OR_GREATER
        [global::System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public SecretScanningPatternOverride(
            string? tokenType,
            string? customPatternVersion,
            string? slug,
            string? displayName,
            int? alertTotal,
            int? alertTotalPercentage,
            int? falsePositives,
            int? falsePositiveRate,
            int? bypassRate,
            global::GitHub.SecretScanningPatternOverrideDefaultSetting? defaultSetting,
            global::GitHub.SecretScanningPatternOverrideEnterpriseSetting? enterpriseSetting,
            global::GitHub.SecretScanningPatternOverrideSetting? setting)
        {
            this.TokenType = tokenType;
            this.CustomPatternVersion = customPatternVersion;
            this.Slug = slug;
            this.DisplayName = displayName;
            this.AlertTotal = alertTotal;
            this.AlertTotalPercentage = alertTotalPercentage;
            this.FalsePositives = falsePositives;
            this.FalsePositiveRate = falsePositiveRate;
            this.BypassRate = bypassRate;
            this.DefaultSetting = defaultSetting;
            this.EnterpriseSetting = enterpriseSetting;
            this.Setting = setting;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SecretScanningPatternOverride" /> class.
        /// </summary>
        public SecretScanningPatternOverride()
        {
        }
    }
}